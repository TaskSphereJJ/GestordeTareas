@model IEnumerable<GestordeTaras.EN.Usuario>
@{
    ViewData["Title"] = "Index";

}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

@await Html.PartialAsync("_Alerts")

<h1 class="text-5xl mb-8 mt-4 font-extrabold dark:text-white">Usuarios</h1>

<p>
    <a asp-action="Create" class="no-underline hover:no-underline text-white bg-purple-700 hover:bg-purple-800 focus:outline-none focus:ring-4 focus:ring-purple-300 font-medium rounded-full text-lg px-5 py-2.5 text-center mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900 inline-flex items-center">
        <i class="fas fa-plus text-lg mr-2"></i> Nuevo Usuario
    </a>
</p>

<form method="get" asp-action="Index" class="flex justify-end items-center mb-4">
    <div class="flex items-center mr-4">
        <span class="mr-2">Buscar por:</span>
        <select name="filter" class="border border-gray-300 rounded-md p-2 w-32">
            <option value="Apellido">Apellido</option>
            <option value="NombreUsuario">Correo</option>
        </select>
    </div>
    <div class="flex items-center">
        <label for="query" class="sr-only">Ingrese el término de búsqueda:</label>
        <input type="text" name="query" class="border border-gray-300 rounded-md p-2" placeholder="Buscar..." aria-label="Ingrese el término de búsqueda" />
        <button type="submit" class="bg-purple-500 text-white font-semibold rounded-md p-2 ml-2 hover:bg-purple-600 transition duration-200">
            <i class="fas fa-search"></i>
        </button>
    </div>
</form>

<div class="relative overflow-x-auto shadow-md sm:rounded-lg mt-4">
    <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-600">
        <thead class="text-base text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
            <tr>                
                <th scope="col" class="px-6 py-3">
                    @Html.DisplayNameFor(model => model.First().Id)
                </th>
                <th scope="col" class="px-6 py-3">
                    @Html.DisplayNameFor(model => model.First().Nombre)
                </th>
                <th scope="col" class="px-6 py-3">
                    @Html.DisplayNameFor(model => model.First().Apellido)
                </th>
                <th scope="col" class="px-6 py-3">
                    @Html.DisplayNameFor(model => model.First().NombreUsuario)
                </th>
                <th scope="col" class="px-6 py-3">
                    @Html.DisplayNameFor(model => model.First().Telefono)
                </th>
                <th scope="col" class="px-6 py-3">
                    @Html.DisplayNameFor(model => model.First().Cargo)
                </th>
                <th scope="col" class="px-6 py-3">
                    @Html.DisplayNameFor(model => model.First().FechaNacimiento)
                </th>
                <th scope="col" class="px-6 py-3">
                    @Html.DisplayNameFor(model => model.First().Status)
                </th>
                <th scope="col" class="px-6 py-3 text-center">
                    Acciones
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700">
                    <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.Id)</td>
                    <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.Nombre)</td>
                    <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.Apellido)</td>
                    <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.NombreUsuario)</td>
                    <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.Telefono)</td>
                    <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.Cargo.Nombre)</td>
                    <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.FechaNacimiento)</td>                   
                    <td class="px-6 py-4">
                        @{
                            var statusName = Enum.GetName(typeof(GestordeTaras.EN.User_Status), item.Status);
                        }
                        @statusName
                    </td>
                    <td class="px-6 py-4 flex justify-center items-center space-x-2">
                        <a href="#" class="bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-3 rounded" onclick="cargarVistaEdit(@item.Id)">
                            <i class="fas fa-edit text-lg"></i>
                        </a>
                        <a href="#" class="bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-3 rounded" onclick="cargarVistaDetails(@item.Id)">
                            <i class="fas fa-eye text-lg"></i>
                        </a>
                        <a href="#" class="bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-3 rounded"
                           onclick="mostrarTarjetaEliminar(@item.Id); return false;">
                            <i class="fas fa-trash-alt text-lg"></i>
                        </a>

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<!-- Modal de edición -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-purple-700 text-white">
                <h5 class="modal-title" id="editModalLabel">Editar Usuario</h5>
                <button type="button" class="btn-close bg-white text-white" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <div id="editModalContent">
                    <!-- Contenido de la vista de edición se cargará aquí -->
                </div>
            </div>
            <div class="modal-footer flex justify-center">
                <button type="button" class="btn btn-primary bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-2 focus:ring-purple-500 focus:outline-none focus:ring-opacity-50 dark:focus:ring-purple-800 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2" onclick="submiteditForm('editForm')">
                    <i class="fas fa-save"></i> Guardar
                </button>
                <button type="button" class="btn btn-secondary bg-gray-300 hover:bg-gray-400 focus:ring-2 focus:ring-gray-500 focus:outline-none focus:ring-opacity-50 dark:focus:ring-gray-800 font-medium rounded-lg text-base px-5 py-2.5 me-2 mb-2" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancelar
                </button>
            </div>
        </div>
    </div>
</div>


<!-- Modal de detalles -->
<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-purple-700 text-white">
                <h5 class="modal-title" id="detailsModalLabel">Detalles de el Usuario</h5>
                <button type="button" class="btn-close bg-white text-white" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <div id="detailsModalContent">
                    <!-- Contenido de la vista de detalles se cargará aquí -->
                </div>
            </div>
            <div class="modal-footer flex justify-center">
                <button type="button" class="btn btn-secondary bg-gray-300 hover:bg-gray-400 focus:ring-2 focus:ring-gray-500 focus:outline-none focus:ring-opacity-50 dark:focus:ring-gray-800 font-medium rounded-lg text-base px-5 py-2.5 me-2 mb-2" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cerrar
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Tarjeta de eliminacion -->
<div id="confirmDeleteCard" class="hidden fixed inset-0 flex items-center justify-center z-50 bg-gray-900 bg-opacity-50">
    <div class="max-w-xs rounded-lg overflow-hidden bg-white shadow-md transition-shadow duration-300">
        <div class="p-6 mt-6">
            <div class="flex justify-center items-center bg-red-200 rounded-full w-16 h-16 mx-auto">
                <img src="https://cdn-icons-png.freepik.com/256/5055/5055247.png?semt=ais_hybrid" alt="Eliminar" class="h-12 w-12 text-red-600" />
            </div>
            <h2 class="mt-4 text-center text-lg font-semibold text-gray-900">Confirmar Eliminación</h2>
            <p class="mt-2 text-center text-sm text-gray-600">¿Estás seguro de que deseas eliminar este usuario? Esta acción no se puede deshacer.</p>
        </div>
        <div class="bg-gray-50 p-4 flex justify-between">
            <button type="button"
                    class="flex-1 mr-2 px-4 py-2 bg-gray-300 text-gray-800 font-medium rounded hover:bg-gray-400 transition duration-200"
                    onclick="document.getElementById('confirmDeleteCard').classList.add('hidden');">
                Cancelar
            </button>
            <form id="deleteForm" method="post" asp-action="Delete">
                <input type="hidden" name="Id" id="deleteUserId" /> <!-- Campo oculto para el ID del usuario -->
                <button type="submit"
                        class="flex-1 px-4 py-2 bg-red-600 text-white font-semibold rounded hover:bg-red-700 transition duration-200">
                    Eliminar
                </button>
            </form>
        </div>
    </div>
</div>


<!-- Bootstrap JavaScript -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

<script>

    function handleResponse(response, isError = false) {
        // Cerrar el modal y luego mostrar el mensaje
        $('#editModal, #createModal').modal('hide'); // Asegúrate de incluir todos los IDs de los modales

        if (isError) {
            TempData["ErrorMessage"] = 'Hubo un problema al procesar la solicitud.';
        } else {
            if (response.success) {
                window.location.reload();
                TempData["SuccessMessage"] = response.message;
            } else {
                TempData["ErrorMessage"] = response.message;
            }
        }
    }

    function submiteditForm(formId) { // Definición de la función para enviar el formulario mediante AJAX
        var formData = $('#' + formId).serialize(); // Recopila los datos del formulario con el ID proporcionado
        $.ajax({ //Solicitud AJAX
            url: '/Usuario/Edit', // URL de la acción Edit en el controlador user
            type: 'POST', // Método de la solicitud
            data: formData, // Datos a enviar al servidor (datos del formulario serializados)
            success: function (response) {
                handleResponse(response);
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
                handleResponse(null, true); // Maneja el error general
            }
        });
    }

    function cargarVistaEdit(id) { // Funcion para cargar la vista en un modal
        $.ajax({ //solicitud AJAX para obtener la vista edit
            url: "/Usuario/Edit/" + id, // URL de la vista que se va a cargar
            type: "GET", // Solicitud para obtener la vista
            success: function (data) { // Función a ejecutar si la solicitud AJAX es exitosa
                $("#editModalContent").html(data); // Inserta el contenido HTML recibido en el elemento con ID "editModalContent"
                $("#editModal").modal("show"); // Muestra el modal con ID "editModal" después de cargar la vista
            }
        });
    }

    function cargarVistaDetails(id) { // Funcion para cargar la vista en un modal
        $.ajax({ //solicitud AJAX para obtener la vista details
            url: "/Usuario/DetailsPartial/" + id, // URL de la vista que se va a cargar
            type: "GET", // Solicitud para obtener la vista
            success: function (data) { // Función a ejecutar si la solicitud AJAX es exitosa
                $("#detailsModalContent").html(data); // Inserta el contenido HTML recibido en el elemento con ID "detailsModalContent"
                $("#detailsModal").modal("show"); // Muestra el modal con ID "detailsModal" después de cargar la vista
            }
        });
    }

    function mostrarTarjetaEliminar(userId) {
        // Establecer el ID del usuario en el campo oculto
        document.getElementById('deleteUserId').value = userId;
        // Mostrar la tarjeta de confirmación
        document.getElementById('confirmDeleteCard').classList.remove('hidden');
    }

    // Función para ocultar la tarjeta (ya está en el botón "Cancelar")
    function ocultarTarjetaEliminar() {
        document.getElementById('confirmDeleteCard').classList.add('hidden');
    }

</script>