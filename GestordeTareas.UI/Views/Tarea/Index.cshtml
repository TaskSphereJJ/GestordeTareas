@model IEnumerable<GestordeTaras.EN.Tarea>
@using Microsoft.AspNetCore.Components

@{
    ViewData["Title"] = "Index";
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    //var tarea = Model.First();
}

<h1 class="text-5xl mb-8 mt-4 font-extrabold dark:text-white">Tareas</h1>

@* En esta parte si Model es diferente de null quiere decir que hay tareas existente y mostrara desde la primera tarea hasta las que hayan*@
@if (Model != null && Model.Any())
{
    var tarea = Model.First();
// Inicializar 'tarea' con el primer elemento de 'Model'

    <p>
        <button onclick="toggleView()" class="btn btn-primary mb-4">Cambiar Vista</button>
    </p>
    <p>
        <a href="#" id="proyectoId" class="no-underline hover:no-underline text-white bg-purple-700 hover:bg-purple-800 focus:outline-none focus:ring-4 focus:ring-purple-300 font-medium rounded-full text-lg px-5 py-2.5 text-center mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900 inline-flex items-center" onclick="cargarVistaCreate(@tarea.IdProyecto)">
            <i class="fas fa-plus text-lg ml-2"></i> Crear Nueva Tarea
        </a>
    </p>

    <div id="tabla" class="tabla">
        <!-- Contenido de la vista de tabla -->
        <div class="relative overflow-x-auto shadow-md sm:rounded-lg mt-4">
            <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-600">
                <thead class=" text-base text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                    <tr>
                        <th scope="col" class="px-6 py-3">
                            @Html.DisplayNameFor(model => model.Id)
                        </th>
                        <th scope="col" class="px-6 py-3">
                            @Html.DisplayNameFor(model => model.Nombre)
                        </th>
                        <th scope="col" class="px-6 py-3">
                            @Html.DisplayNameFor(model => model.Descripcion)
                        </th>

                        <th scope="col" class="px-6 py-3">
                            @Html.DisplayNameFor(model => model.FechaCreacion)
                        </th>
                        <th scope="col" class="px-6 py-3">
                            @Html.DisplayNameFor(model => model.FechaVencimiento)
                        </th>
                        <th scope="col" class="px-6 py-3">
                            @Html.DisplayNameFor(model => model.IdCategoria)
                        </th>
                        <th scope="col" class="px-6 py-3">
                            @Html.DisplayNameFor(model => model.IdPrioridad)
                        </th>
                        <th scope="col" class="px-6 py-3">
                            @Html.DisplayNameFor(model => model.IdEstadoTarea)
                        </th>
                        <th scope="col" class="px-6 py-3">
                            @Html.DisplayNameFor(model => model.IdProyecto)
                        </th>

                        <th scope="col" class="px-6 py-3 text-center">
                            Acciones
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700">
                            <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.Id)</td>
                            <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.Nombre)</td>
                            <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.Descripcion)</td>
                            <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.FechaCreacion)</td>
                            <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.FechaVencimiento)</td>
                            <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.Categoria.Nombre)</td>
                            <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.Prioridad.Nombre)</td>
                            <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.EstadoTarea.Nombre)</td>
                            <td class="px-6 py-4">@Html.DisplayFor(modelItem => item.Proyecto.Titulo)</td>
                            <td class="px-6 py-4 flex justify-center items-center space-x-2">
                                <a href="#" class="btn btn-primary btn-sm flex items-center p-2" onclick="cargarVistaEdit(@item.Id)">
                                    <i class="fas fa-edit text-lg"></i>
                                </a>
                                <a href="#" class="btn btn-warning btn-sm flex items-center p-2" onclick="cargarVistaDetails(@item.Id)">
                                    <i class="fas fa-eye text-lg"></i>
                                </a>
                                <a href="#" class="btn btn-danger btn-sm flex items-center p-2" onclick="cargarVistaDelete(@item.Id)">
                                    <i class="fas fa-trash-alt text-lg"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

}
else
{
    <a href="#" class="no-underline hover:no-underline text-white bg-purple-700 hover:bg-purple-800 focus:outline-none focus:ring-4 focus:ring-purple-300 font-medium rounded-full text-lg px-5 py-2.5 text-center mb-4 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900 inline-flex items-center" onclick="cargarVistaCreate(@ViewBag.ProyectoId)">
        <i class="fas fa-plus text-lg ml-2"></i> Crear Nueva Tarea
    </a>
    <div class="text-center">      
        <h1 class="text-3xl font-extrabold text-gray-700">No hay tareas disponibles</h1>
    </div>

}

<div id="tarjetas" class="hidden">
    <!-- Contenido de la vista de tarjetas -->
    <div class="container mx-auto">
        <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-600">
            <thead class="text-base text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                <tr>
                    <th scope="col" class="px-6 py-3 w-1/3">Pendiente</th>
                    <th scope="col" class="px-6 py-3 w-1/3">En Progreso</th>
                    <th scope="col" class="px-6 py-3 w-1/3">Finalizado</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="bg-white dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700">
                        <td class="p-2 px-0 py-4 droppable" id="todo-tasks">
                            <div class="tarjeta" draggable="true" data-id="@item.Id">
                                <div class="mx-auto w-56">
                                    <div class="bg-gray-100 cuerpo rounded-lg p-4 shadow-md text-left">
                                        <h2 id="nombre-@item.Id" class="text-lg font-semibold mb-1">@item.Nombre</h2>
                                        <div class="mt-2 flex justify-between">
                                            <p class="text-xs">Fecha de Vencimiento: @item.FechaVencimiento.ToShortDateString()</p>
                                            <p class="text-xs">Categoría: @item.Categoria.Nombre</p>
                                        </div>
                                        <div class="mt-1">
                                            <p class="text-xs">Prioridad: @item.Prioridad.Nombre</p>
                                        </div>
                                        <div class="mt-1">
                                            <p class="text-xs">Estado: @item.EstadoTarea.Nombre</p>
                                        </div>
                                        <button class="mt-2 px-3 py-1 text-xs bg-purple-700 text-white rounded hover:bg-purple-600" onclick="cargarVistaEdit(@item.Id)">Ver más</button>
                                    </div>
                                </div>
                            </div>
                        </td>
                        <td class="p-2 px-0 py-4 droppable" id="progress-tasks" data-estado="EnProgreso"></td>
                        <td class="p-2 px-0 py-4 droppable" id="done-tasks" data-estado="Finalizado"></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<!-- Modales -->
<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-purple-700 text-white">
                <h5 class="modal-title" id="createModalLabel">Crear Tarea</h5>
                <button type="button" class="btn-close bg-white text-white" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <div id="createModalContent">
                    <!-- Contenido de la vista de creación se cargará aquí -->
                </div>
            </div>
            <div class="modal-footer flex justify-center">
                <button type="button" class="btn btn-primary bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-2 focus:ring-purple-500 focus:outline-none focus:ring-opacity-50 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2" onclick="submitcreateForm('createForm')">
                    <i class="fas fa-save"></i> Guardar
                </button>
                <button type="button" class="btn btn-secondary bg-gray-300 hover:bg-gray-400 focus:ring-2 focus:ring-gray-500 focus:outline-none focus:ring-opacity-50 dark:focus:ring-gray-800 font-medium rounded-lg text-base px-5 py-2.5 me-2 mb-2" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancelar
                </button>
            </div>


        </div>
    </div>
</div>

<!-- Modal de edición -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-purple-700 text-white">
                <h5 class="modal-title" id="editModalLabel">Editar Tarea</h5>
                <button type="button" class="btn-close bg-white text-white" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <div id="editModalContent">
                    <!-- Contenido de la vista de edición se cargará aquí -->
                </div>
            </div>
            <div class="modal-footer flex justify-center">
                <button type="button" class="btn btn-primary bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-2 focus:ring-purple-500 focus:outline-none focus:ring-opacity-50 dark:focus:ring-purple-800 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2" onclick="submiteditForm('editForm')">
                    <i class="fas fa-save"></i> Guardar
                </button>
                <button type="button" class="btn btn-secondary bg-gray-300 hover:bg-gray-400 focus:ring-2 focus:ring-gray-500 focus:outline-none focus:ring-opacity-50 dark:focus:ring-gray-800 font-medium rounded-lg text-base px-5 py-2.5 me-2 mb-2" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancelar
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de detalles -->
<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-purple-700 text-white">
                <h5 class="modal-title" id="detailsModalLabel">Detalles de la Tarea</h5>
                <button type="button" class="btn-close bg-white text-white" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <div id="detailsModalContent">
                    <!-- Contenido de la vista de detalles se cargará aquí -->
                </div>
            </div>
            <div class="modal-footer flex justify-center">
                <button type="button" class="btn btn-secondary bg-gray-300 hover:bg-gray-400 focus:ring-2 focus:ring-gray-500 focus:outline-none focus:ring-opacity-50 dark:focus:ring-gray-800 font-medium rounded-lg text-base px-5 py-2.5 me-2 mb-2" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cerrar
                </button>
            </div>
        </div>
    </div>
</div>


<!-- Modal de eliminación -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Eliminar Tarea</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body" id="deleteModalContent">
                <!-- Contenido de la vista de eliminación se cargará aquí -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" onclick="eliminarTarea()">Eliminar</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JavaScript -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>


<script>

    document.addEventListener('DOMContentLoaded', function () {
        const tarjetas = document.querySelectorAll('.tarjeta');
        const droppables = document.querySelectorAll('.droppable');

        let tarjetaArrastrada = null;

        tarjetas.forEach(tarjeta => {
            tarjeta.addEventListener('dragstart', (e) => {
                tarjetaArrastrada = e.target;
            });

            tarjeta.addEventListener('dragend', () => {
                tarjetaArrastrada = null;
            });
        });

        droppables.forEach(droppable => {
            droppable.addEventListener('dragover', e => {
                e.preventDefault();
            });

            droppable.addEventListener('drop', async (e) => {
                e.preventDefault();
                if (tarjetaArrastrada) {
                    const idEstadoTarea = droppable.id;
                    const idTarea = tarjetaArrastrada.dataset.id;
                    tarjetaArrastrada.dataset.estado = idEstadoTarea;
                    droppable.appendChild(tarjetaArrastrada);

                    const tarea = { Id: parseInt(idTarea), IdEstadoTarea: idEstadoTarea };
                    const success = await actualizarEstadoTarea(tarea);
                    if (success) {
                        alert('Estado de tarea actualizado correctamente');
                    } else {
                        alert('Error al actualizar estado de tarea');
                    }
                }
            });
        });
    });

    async function actualizarEstadoTarea(tarea) {
        const response = await fetch(`/Tarea/ActualizarEstadoTarea`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(tarea)
        });
        if (response.ok) {
            return true;
        } else {
            return false;
        }
    }


    //OCULTAR y mostarr la tabla
    function toggleView() {
        var tabla = document.getElementById('tabla');
        var tarjetas = document.getElementById('tarjetas');

        if (tabla.classList.contains('hidden')) {
            tabla.classList.remove('hidden');
            tarjetas.classList.add('hidden');
        } else {
            tabla.classList.add('hidden');
            tarjetas.classList.remove('hidden');
        }
    }

    function submitcreateForm(formId) { // Definición de la función para enviar el formulario mediante AJAX
        var formData = $('#' + formId).serialize();  // Recopila los datos del formulario con el ID proporcionado
        $.ajax({ //Solicitud AJAX
            url: '/Tarea/Create', // URL de la acción Create en el controlador Tarea
            type: 'POST',  // Método de la solicitud
            data: formData, // Datos a enviar al servidor (datos del formulario serializados)
            success: function (response) { // Función a ejecutar si la solicitud es exitosa
                window.location.reload(); // Recarga la página después de enviar el formulario
                $('#createModal').modal('hide'); // Oculta el modal con ID "createModal" después de enviar el formulario
            },
            error: function (xhr, status, error) { // Función a ejecutar si hay un error en la solicitud AJAX
                console.error(xhr.responseText); // Muestra el mensaje de error en la consola del navegador
            }
        });
    }

    function submiteditForm(formId) { // Definición de la función para enviar el formulario mediante AJAX
        var formData = $('#' + formId).serialize(); // Recopila los datos del formulario con el ID proporcionado
        $.ajax({ //Solicitud AJAX
            url: '/Tarea/Edit', // URL de la acción Edit en el controlador Tarea
            type: 'POST', // Método de la solicitud
            data: formData, // Datos a enviar al servidor (datos del formulario serializados)
            success: function (response) { // Función a ejecutar si la solicitud es exitosa
                window.location.reload(); // Recarga la página después de enviar el formulario
            },
            error: function (xhr, status, error) { // Función a ejecutar si hay un error en la solicitud AJA
                console.error(xhr.responseText); // Muestra el mensaje de error en la consola del navegador
            }
        });
    }

    function eliminarTarea() { // Función para eliminar un Tarea mediante una solicitud AJAX
        $.ajax({ // Enviar una solicitud AJAX para eliminar el Tarea
            url: '/Tarea/Delete', // URL de la acción POST para eliminar la Tarea
            type: 'POST', // Método POST para enviar la solicitud
            data: $("#deleteForm").serialize(), // Serializar los datos del formulario (que incluye el ID de la Tarea)
            success: function (response) { // Función a ejecutar si la solicitud AJAX es exitosa
                window.location.reload(); // Recargar la página después de eliminar el Tarea
            },
            error: function (xhr, status, error) { // Función a ejecutar si hay un error en la solicitud AJAX
                alert('Error al eliminar la Tarea: ' + xhr.responseText); // Mostrar una alerta con el mensaje de error recibido del servidor
            }
        });
    }



    function cargarVistaCreate(id) {
        // var proyectoId = $("#proyectoId").val(); // Obtener el ID del proyecto desde el elemento HTML
        $.ajax({
            url: "/Tarea/Create/",
            type: "GET",
            data: { idProyecto: id }, // Enviar el ID del proyecto como parte de los datos
            success: function (data) {
                $("#createModalContent").html(data);
                $("#createModal").modal("show");
            }
        });
    }

    function cargarVistaEdit(id) { // Funcion para cargar la vista en un modal
        $.ajax({ //solicitud AJAX para obtener la vista edit
            url: "/Tarea/Edit/" + id, // URL de la vista que se va a cargar
            type: "GET", // Solicitud para obtener la vista
            success: function (data) { // Función a ejecutar si la solicitud AJAX es exitosa
                $("#editModalContent").html(data); // Inserta el contenido HTML recibido en el elemento con ID "editModalContent"
                $("#editModal").modal("show"); // Muestra el modal con ID "editModal" después de cargar la vista
            }
        });
    }

    function cargarVistaDetails(id) { // Funcion para cargar la vista en un modal
        $.ajax({ //solicitud AJAX para obtener la vista details
            url: "/Tarea/DetailsPartial/" + id, // URL de la vista que se va a cargar
            type: "GET", // Solicitud para obtener la vista
            success: function (data) { // Función a ejecutar si la solicitud AJAX es exitosa
                $("#detailsModalContent").html(data); // Inserta el contenido HTML recibido en el elemento con ID "detailsModalContent"
                $("#detailsModal").modal("show"); // Muestra el modal con ID "detailsModal" después de cargar la vista
            }
        });
    }

    function cargarVistaDelete(id) { // Funcion para cargar la vista en un modal
        $.ajax({ //solicitud AJAX para obtener la vista delete
            url: "/Tarea/Delete/" + id, // URL de la vista que se va a cargar
            type: "GET", // Solicitud para obtener la vista
            success: function (data) { // Función a ejecutar si la solicitud AJAX es exitosa
                $("#deleteModalContent").html(data); // Inserta el contenido HTML recibido en el elemento con ID "deleteModalContent"
                $("#deleteModal").modal("show"); // Muestra el modal con ID "deleteModal" después de cargar la vista
            },
            error: function () { // Función a ejecutar si la solicitud AJAX falla
                alert("Error al cargar la vista de eliminación."); //Se muestra un mensaje de error que no se pudo mostrar el modal
            }
        });
    }


</script>