@using GestordeTaras.EN;
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - GestordeTareas.UI</title>

    @* Importar TailwindCSS *@
    <link href="~/css/output.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" />

    @* FontAwesome para íconos *@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

    @* SweetAlert (si lo estás utilizando) *@
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    @* Si tienes estilos personalizados en 'GestordeTareas.UI.styles.css', mantenlo *@
    <link rel="stylesheet" href="~/GestordeTareas.UI.styles.css" asp-append-version="true" />
</head>

<body class="light:bg-lightPurple light:text-lightText dark:bg-darkPurple dark:text-darkText">
    @{
        var nombre = User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.GivenName)?.Value;
        var apellido = User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Surname)?.Value;
    }

    @* Header (barra de navegación) *@
    @if (Context.Request.Path.Value != "/Usuario/login")
    {
        @if (User.Identity.IsAuthenticated)
        {
            <header
                class="fixed top-0 left-0 right-0 shadow-md flex items-center justify-between px-6 py-4 bg-lightPurple dark:bg-darkPurple backdrop-filter backdrop-blur-lg z-20">
                @* Botón de menú hamburguesa *@
                <button type="button" class="group inline-flex items-center justify-center rounded-lg p-2" aria-label="Menu"
                    id="menuButton" onclick="toggleSidebar()">
                    <i class="fas fa-bars text-xl text-gray-800 dark:text-yellow-500"></i>
                </button>

                @* Botón para modo claro/oscuro *@
                <button id="darkModeToggle" class="ml-auto flex items-center justify-center">
                    <i id="darkModeIcon" class="fas fa-sun text-yellow-500 text-2xl"></i>
                </button>

                @* Nombre del usuario autenticado y menú de usuario *@
                <div class="ml-6 flex items-center space-x-4">
                    <span class="text-sm font-semibold text-purple-500 dark:text-white">@($"{nombre} {apellido}")</span>

                    <div class="relative">
                        <button id="userMenuButton" class="flex items-center">
                            <img src="~/img/FOOTOO.png" class="rounded-full w-10 h-10" alt="Avatar" />
                            <i class="ml-2 fas fa-chevron-down text-xl text-purple-500 dark:text-white"></i>
                        </button>

                        @* Opciones del menú desplegable *@
                        <div id="userMenuOptions" class="absolute right-0 mt-2 w-48 bg-white shadow-lg rounded-md hidden z-30">
                            <a class="block px-4 py-2 text-sm text-gray-700 hover:bg-purple-100 dark:text-white" asp-area=""
                                asp-controller="usuario" asp-action="perfil">
                                <i class="fas fa-sign-out-alt mr-2"></i> Perfil
                            </a>
                            <a class="block px-4 py-2 text-sm text-gray-700 hover:bg-purple-100 dark:text-white" asp-area=""
                                asp-controller="Usuario" asp-action="Logout">
                                <i class="fas fa-sign-out-alt mr-2"></i> Cerrar Sesión
                            </a>
                        </div>
                    </div>
                </div>
            </header>
        }
    }

    @* Sidebar (menú lateral) *@
    <div id="drawer-navigation"
        class="fixed top-0 left-0 w-64 h-screen p-4 bg-lightPurple dark:bg-darkPurple transform -translate-x-full transition-transform z-30 border-t-2">
        @* Logo del Sidebar *@
        <div class="flex justify-center mb-6">
            <img src="~/img/logo.svg" alt="Logo" class="w-24 h-auto">
        </div>

        <div class="flex justify-between items-center mb-4">
            <button type="button"
                class="text-gray-400 hover:bg-gray-300 hover:text-white rounded-full p-2 transition duration-300 absolute top-2 right-2"
                onclick="toggleSidebar()">
                <i class="fas fa-times text-2xl"></i>
            </button>
        </div>

        <nav class="space-y-4">
            <!-- Ruta Inicio -->
            <a class="flex items-center px-4 py-3 text-gray-600 dark:text-gray-300 hover:text-purple-500 dark:hover:text-purple-500 rounded-lg transition-all duration-300 @(ViewContext.RouteData.Values["controller"].ToString() == "Home" ? "text-purple-500" : "")"
                asp-area="" asp-controller="Home" asp-action="Index">
                <i
                    class="fas fa-home mr-3 text-2xl @(ViewContext.RouteData.Values["controller"].ToString() == "Home" ? "text-purple-500" : "text-gray-600 dark:text-gray-300")"></i>
                <span
                    class="font-medium text-lg @(ViewContext.RouteData.Values["controller"].ToString() == "Home" ? "text-purple-500" : "text-gray-600 dark:text-gray-300")">Inicio</span>
            </a>

            <!-- Validación de usuario Administrador -->
            @if (User.Identity.IsAuthenticated && User.IsInRole("Administrador"))
            {
                <!-- Ruta Dashboard -->
                <a class="flex items-center px-4 py-3 text-gray-600 dark:text-gray-300 hover:text-purple-500 dark:hover:text-purple-500 rounded-lg transition-all duration-300 @(ViewContext.RouteData.Values["controller"].ToString() == "Admin" ? "text-purple-500" : "")"
                    asp-area="" asp-controller="Admin" asp-action="Dashboard">
                    <i
                        class="fas fa-tachometer-alt mr-3 text-2xl @(ViewContext.RouteData.Values["controller"].ToString() == "Admin" ? "text-purple-500" : "text-gray-600 dark:text-gray-300")"></i>
                    <span
                        class="font-medium text-lg @(ViewContext.RouteData.Values["controller"].ToString() == "Admin" ? "text-purple-500" : "text-gray-600 dark:text-gray-300")">Dashboard</span>
                </a>
            }

            <!-- Validación de usuario Colaborador -->
            @if (User.Identity.IsAuthenticated && User.IsInRole("Colaborador"))
            {
                <!-- Ruta Perfil -->
                <a class="flex items-center px-4 py-3 text-gray-600 dark:text-gray-300 hover:text-purple-500 dark:hover:text-purple-500 rounded-lg transition-all duration-300 @(ViewContext.RouteData.Values["controller"].ToString() == "Usuario" ? "text-purple-500" : "")"
                    asp-area="" asp-controller="Usuario" asp-action="Perfil">
                    <i
                        class="fas fa-user mr-3 text-2xl @(ViewContext.RouteData.Values["controller"].ToString() == "Usuario" ? "text-purple-500" : "text-gray-600 dark:text-gray-300")"></i>
                    <span
                        class="font-medium text-lg @(ViewContext.RouteData.Values["controller"].ToString() == "Usuario" ? "text-purple-500" : "text-gray-600 dark:text-gray-300")">Perfil</span>
                </a>

                <!-- Ruta Proyecto -->
                <a class="flex items-center px-4 py-3 text-gray-600 dark:text-gray-300 hover:text-purple-500 dark:hover:text-purple-500 rounded-lg transition-all duration-300 @(ViewContext.RouteData.Values["controller"].ToString() == "Proyecto" ? "text-purple-500" : "")"
                    asp-area="" asp-controller="Proyecto" asp-action="Index">
                    <i
                        class="fas fa-briefcase mr-3 text-2xl @(ViewContext.RouteData.Values["controller"].ToString() == "Proyecto" ? "text-purple-500" : "text-gray-600 dark:text-gray-300")"></i>
                    <span
                        class="font-medium text-lg @(ViewContext.RouteData.Values["controller"].ToString() == "Proyecto" ? "text-purple-500" : "text-gray-600 dark:text-gray-300")">Proyecto</span>
                </a>

                <!-- Ruta Mis Proyectos -->
                <a class="flex items-center px-4 py-3 text-gray-600 dark:text-gray-300 hover:text-purple-500 dark:hover:text-purple-500 rounded-lg transition-all duration-300 @(ViewContext.RouteData.Values["controller"].ToString() == "ProyectoUsuario" ? "text-purple-500" : "")"
                    asp-area="" asp-controller="ProyectoUsuario" asp-action="MisProyectos">
                    <i
                        class="fas fa-tasks mr-3 text-2xl @(ViewContext.RouteData.Values["controller"].ToString() == "ProyectoUsuario" ? "text-purple-500" : "text-gray-600 dark:text-gray-300")"></i>
                    <span
                        class="font-medium text-lg @(ViewContext.RouteData.Values["controller"].ToString() == "ProyectoUsuario" ? "text-purple-500" : "text-gray-600 dark:text-gray-300")">Mis
                        Proyectos</span>
                </a>
            }
        </nav>

        @* Otras opciones adicionales *@
        <div class="mt-auto space-y-4">
            <a class="flex items-center px-4 py-3 text-gray-600 dark:text-gray-300 hover:text-purple-500 dark:hover:text-purple-500 rounded-lg transition-all duration-300"
                href="#">
                <i class="fas fa-question-circle mr-3 text-2xl"></i>
                <span class="font-medium text-lg">Ayuda</span>
            </a>

            <a class="flex items-center px-4 py-3 text-gray-600 dark:text-gray-300 hover:text-purple-500 dark:hover:text-purple-500 rounded-lg transition-all duration-300"
                asp-controller="Usuario" asp-action="Logout">
                <i class="fas fa-sign-out-alt mr-3 text-2xl"></i>
                <span class="font-medium text-lg">Cerrar Sesión</span>
            </a>
        </div>
    </div>

    @* Contenido Principal *@
    <div class="container mx-auto mt-20 bg-lightPurple bg-darkPurple">
        <main role="main" class="">
            @RenderBody()
        </main>
    </div>

    <script>
        const darkModeToggle = document.getElementById('darkModeToggle');
        const darkModeIcon = document.getElementById('darkModeIcon');
        const sidebar = document.getElementById('drawer-navigation');

        // Función para alternar entre temas
        function toggleDarkMode() {
            const isDarkMode = document.body.classList.toggle('dark');
            localStorage.setItem('darkMode', isDarkMode ? 'dark' : 'light');
            darkModeIcon.classList.toggle('fa-sun');
            darkModeIcon.classList.toggle('fa-moon');
        }

        // Cambiar entre modo oscuro y claro
        darkModeToggle.addEventListener('click', toggleDarkMode);

        // Recuerda la preferencia de modo cuando se carga la página
        window.addEventListener('load', () => {
            const savedMode = localStorage.getItem('darkMode');
            if (savedMode === 'dark') {
                document.body.classList.add('dark');
                darkModeIcon.classList.replace('fa-sun', 'fa-moon');
            }
        });

        // Control del sidebar (menú lateral)
        const menuButton = document.getElementById('menuButton');

        function toggleSidebar() {
            sidebar.classList.toggle('translate-x-0');
            sidebar.classList.toggle('-translate-x-full');
        }

        document.addEventListener('click', (event) => {
            if (!sidebar.contains(event.target) && !menuButton.contains(event.target)) {
                sidebar.style.transform = 'translateX(-100%)';
            }
        });

        // Control del menú de usuario
        const userMenuButton = document.getElementById('userMenuButton');
        const userMenuOptions = document.getElementById('userMenuOptions');

        userMenuButton.addEventListener('click', () => {
            userMenuOptions.classList.toggle('hidden');
        });

        document.addEventListener('click', (event) => {
            if (!userMenuButton.contains(event.target) && !userMenuOptions.contains(event.target)) {
                userMenuOptions.classList.add('hidden');
            }
        });
    </script>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

</body>

</html>
