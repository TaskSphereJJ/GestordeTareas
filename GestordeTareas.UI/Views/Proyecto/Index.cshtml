@model IEnumerable<GestordeTaras.EN.Proyecto>

@{
    ViewData["Title"] = "Index";
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
}
<div id="alertContainer" class="fixed bottom-4 right-4 z-50">
    @if (TempData["SuccessMessage"] != null)
    {
        <div role="alert"
            class="bg-green-100 dark:bg-green-900 border-l-4 border-green-500 dark:border-green-700 text-green-900 dark:text-green-100 p-2 rounded-lg flex items-center transition duration-300 ease-in-out hover:bg-green-200 dark:hover:bg-green-800 transform hover:scale-105">
            <svg stroke="currentColor" viewBox="0 0 24 24" fill="none" class="h-6 w-6 flex-shrink-0 mr-3 text-green-600"
                xmlns="http://www.w3.org/2000/svg">
                <path d="M13 16h-1v-4h1m0-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" stroke-width="2" stroke-linejoin="round"
                    stroke-linecap="round"></path>
            </svg>
            <p class="text-sm font-semibold">@TempData["SuccessMessage"]</p>
        </div>
    }
</div>

@if (TempData["ErrorMessage"] != null)
{
    <script>
        Swal.fire({
            icon: 'error',
            title: '¡Error!',
            text: '@TempData["ErrorMessage"]',
            confirmButtonText: 'OK'
        });
    </script>
}



<h1 class="text-5xl mb-8 mt-4 font-extrabold dark:text-white">Proyectos</h1>
@if (User.Identity.IsAuthenticated && User.IsInRole("Administrador"))
{
    <p>
        <a href="#"
            class="no-underline hover:no-underline text-white bg-purple-700 hover:bg-purple-800 focus:outline-none focus:ring-4 focus:ring-purple-300 font-medium rounded-full text-lg px-4 py-2 text-center mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900 inline-flex items-center"
            onclick="cargarVistaCreate()">
            <i class="fas fa-plus-circle mr-2"></i> Nuevo
        </a>
    </p>
}
@if (Model != null && Model.Any())
{
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        @foreach (var proyecto in Model)
        {
            <!-- Hacemos la tarjeta clicable -->
            <a href="@Url.Action("Index", "Tarea", new { proyectoId = proyecto.Id })"
                class="relative block proyecto rounded-lg shadow-md p-6 bg-white dark:bg-gray-800 hover:shadow-xl transition-shadow duration-300 ease-in-out">

                <!-- Botón principal flotante con menú de tres puntos (solo para Administradores) -->
                <div class="absolute top-0 right-0 mt-1 mr-1">
                    <div class="relative">
                        @if (User.IsInRole("Administrador"))
                        {
                            <button class="rounded-full bg-gray-200 dark:bg-gray-600 w-10 h-10 flex items-center justify-center"
                                id="menuButton-@proyecto.Id" onclick="toggleMenu(@proyecto.Id)">
                                <i class="fas fa-ellipsis-v text-gray-600 dark:text-gray-300 text-xl"></i>
                            </button>
                        }
                        <!-- Menú desplegable -->
                        <div id="menu-@proyecto.Id"
                            class="absolute right-0 mt-2 w-40 bg-white dark:bg-gray-800 rounded-lg py-2 flex flex-col gap-2 shadow-lg hidden z-10">
                            <ul class="space-y-2 px-3">
                                <!-- Opción de Detalles -->
                                <li class="flex items-center gap-2 text-gray-600 dark:text-gray-200 cursor-pointer transition-all duration-300 ease-out p-2 rounded-md hover:bg-blue-600 hover:text-white hover:translate-x-1 hover:-translate-y-1 active:scale-95"
                                    onclick="window.location='@Url.Action("Details", "Proyecto", new { id = proyecto.Id })'">
                                    <i class="fas fa-plus"></i>
                                    <p class="font-semibold">Detalles</p>
                                </li>
                                <!-- Opción de Editar -->
                                <li class="flex items-center gap-2 text-gray-600 dark:text-gray-200 cursor-pointer transition-all duration-300 ease-out p-2 rounded-md hover:bg-blue-600 hover:text-white hover:translate-x-1 hover:-translate-y-1 active:scale-95"
                                    onclick="cargarVistaEdit(@proyecto.Id)">
                                    <i class="fas fa-edit"></i>
                                    <p class="font-semibold">Editar</p>
                                </li>
                                <!-- Opción de Eliminar -->
                                <li class="flex items-center gap-2 text-gray-600 dark:text-gray-200 cursor-pointer transition-all duration-300 ease-out p-2 rounded-md hover:bg-red-700 hover:text-white hover:translate-x-1 hover:-translate-y-1 active:scale-95"
                                    onclick="mostrarTarjetaEliminar(@proyecto.Id); return false;">
                                    <i class="fas fa-trash-alt"></i>
                                    <p class="font-semibold">Eliminar</p>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>

                <!-- Título del proyecto -->
                <h2 class="text-lg font-semibold text-black dark:text-gray-100 mb-4 break-words text-center">@proyecto.Titulo
                </h2>

                <!-- Descripción -->
                <p class="text-black dark:text-gray-400 mb-2 text-base">
                    <span class="text-purple-600 dark:text-purple-400 font-bold">Descripción:</span>
                    @if (proyecto.Descripcion.Length > 200)
                    {
                        <text>@proyecto.Descripcion.Substring(0, 200)...</text>
                    }
                    else
                    {
                        <text>@proyecto.Descripcion</text>
                    }
                </p>

                <!-- Administrador -->
                <p class="text-black dark:text-gray-400 mb-2 text-base">
                    <span class="text-purple-600 dark:text-purple-400 font-bold">Administrador:</span> @proyecto.Usuario.Nombre
                </p>

                <!-- Fecha de finalización -->
                <p class="text-black dark:text-gray-400 mb-4 text-base">
                    <span class="text-purple-600 dark:text-purple-400 font-bold">Fecha de finalización:</span>
                    @proyecto.FechaFinalizacion.ToShortDateString()
                </p>

                <!-- Barra de progreso -->
                @{
                    var totalTareas = proyecto.Tareas.Count();
                    var tareasFinalizadas = proyecto.Tareas.Where(t => t.EstadoTarea.Nombre == "Finalizada").Count();
                    var porcentajeProgreso = totalTareas > 0 ? (tareasFinalizadas * 100) / totalTareas : 0;
                }
                <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5 mb-2">
                    <div class="bg-blue-500 h-2.5 rounded-full" style="width:@porcentajeProgreso%;"></div>
                </div>
                <p class="text-right text-sm font-semibold text-gray-500 dark:text-gray-400">@porcentajeProgreso% completado</p>

                <!-- Botón "+" para colaboradores -->
                @if (User.IsInRole("Colaborador"))
                {
                    <a href="@Url.Action("Details", "Proyecto", new { id = proyecto.Id })"
                        class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-3 rounded">
                        <i class="fas fa-plus text-lg"></i>
                    </a>
                }

            </a>
        }
    </div>

}
else
{
    <div class="flex flex-col items-center justify-center mt-10">
        <img src="~/img/found.svg" alt="No hay proyectos disponibles" class="w-36 h-36 mb-4" />
        <h1 class="text-2xl font-bold text-gray-700">No hay proyectos disponibles</h1>
        <p class="mt-2 text-gray-500">Crea un nuevo proyecto para comenzar a trabajar.</p>
    </div>
}

<!-- Modal de creacion -->
<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-purple-700 text-white">
                <h5 class="modal-title" id="createModalLabel">Crear Proyecto</h5>
                <button type="button" class="btn-close bg-white text-white" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <div id="createModalContent">
                    <!-- Contenido de la vista de creación se cargará aquí -->
                </div>
            </div>
            <div class="modal-footer flex justify-center">
                <button type="button"
                    class="btn btn-primary bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-2 focus:ring-purple-500 focus:outline-none focus:ring-opacity-50 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2"
                    onclick="submitcreateForm('createForm')">
                    <i class="fas fa-save"></i> Guardar
                </button>
                <button type="button"
                    class="btn btn-secondary bg-gray-300 hover:bg-gray-400 focus:ring-2 focus:ring-gray-500 focus:outline-none focus:ring-opacity-50 dark:focus:ring-gray-800 font-medium rounded-lg text-base px-5 py-2.5 me-2 mb-2"
                    data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancelar
                </button>
            </div>


        </div>
    </div>
</div>

<!-- Modal de edición -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-purple-700 text-white">
                <h5 class="modal-title" id="editModalLabel">Editar Proyecto</h5>
                <button type="button" class="btn-close bg-white text-white" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <div id="editModalContent">
                    <!-- Contenido de la vista de edición se cargará aquí -->
                </div>
            </div>
            <div class="modal-footer flex justify-center">
                <button type="button"
                    class="btn btn-primary bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-2 focus:ring-purple-500 focus:outline-none focus:ring-opacity-50 dark:focus:ring-purple-800 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2"
                    onclick="submiteditForm('editForm')">
                    <i class="fas fa-save"></i> Guardar
                </button>
                <button type="button"
                    class="btn btn-secondary bg-gray-300 hover:bg-gray-400 focus:ring-2 focus:ring-gray-500 focus:outline-none focus:ring-opacity-50 dark:focus:ring-gray-800 font-medium rounded-lg text-base px-5 py-2.5 me-2 mb-2"
                    data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancelar
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Tarjeta de eliminacion -->
<div id="confirmDeleteCard"
    class="hidden fixed inset-0 flex items-center justify-center z-50 bg-gray-900 bg-opacity-50">
    <div class="max-w-xs rounded-lg overflow-hidden bg-white shadow-md transition-shadow duration-300">
        <div class="p-6 mt-6">
            <div class="flex justify-center items-center bg-red-200 rounded-full w-16 h-16 mx-auto">
                <img src="https://cdn-icons-png.freepik.com/256/3712/3712167.png" alt="Eliminar"
                    class="h-12 w-12 text-red-600" />
            </div>
            <h2 class="mt-4 text-center text-lg font-semibold text-gray-900">Confirmar Eliminación</h2>
            <p class="mt-2 text-center text-sm text-gray-600">¿Estás seguro de que deseas eliminar este proyecto? Esta
                acción no se puede deshacer.</p>
        </div>
        <div class="bg-gray-50 p-4 flex justify-between">
            <button type="button"
                class="flex-1 mr-2 px-4 py-2 bg-gray-300 text-gray-800 font-medium rounded hover:bg-gray-400 transition duration-200"
                onclick="document.getElementById('confirmDeleteCard').classList.add('hidden');">
                Cancelar
            </button>
            <form id="deleteForm" method="post" asp-action="Delete">
                <input type="hidden" name="Id" id="deleteProjectId" />
                <button type="submit"
                    class="flex-1 px-4 py-2 bg-red-600 text-white font-semibold rounded hover:bg-red-700 transition duration-200">
                    Eliminar
                </button>
            </form>
        </div>
    </div>
</div>

<!-- Bootstrap JavaScript -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
    crossorigin="anonymous"></script>


<script>
    document.querySelectorAll('[id^="menuButton-"]').forEach(button => {
        const itemId = button.id.split('-')[1];
        const dropdown = document.getElementById(`menuDropdown-${itemId}`);

        button.addEventListener('click', () => {
            dropdown.classList.toggle('hidden');
        });

        window.addEventListener('click', (e) => {
            if (!button.contains(e.target)) {
                dropdown.classList.add('hidden');
            }
        });
    });

    function toggleMenu(id) {
        var menu = document.getElementById('menu-' + id);
        if (menu.classList.contains('hidden')) {
            menu.classList.remove('hidden');
        } else {
            menu.classList.add('hidden');
        }
    }

    // Cierra el menú si se hace clic fuera de él
    window.addEventListener('click', function (e) {
        // Obtén todos los menús desplegables
        var allMenus = document.querySelectorAll('[id^="menu-"]');

        // Verifica si el clic no ocurrió dentro del botón o del menú
        allMenus.forEach(function (menu) {
            if (!menu.contains(e.target) && !document.getElementById('menuButton-' + menu.id.split('-')[1]).contains(e.target)) {
                menu.classList.add('hidden');
            }
        });
    });

    function handleResponse(response, isError = false) {
        // Cerrar el modal y luego mostrar el mensaje
        $('#editModal, #createModal').modal('hide'); // Asegúrate de incluir todos los IDs de los modales

        if (isError) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Hubo un problema al procesar la solicitud.',
                confirmButtonText: 'OK',
                showConfirmButton: true,
                timer: null
            });
        } else {
            if (response.success) {
                window.location.reload();
                TempData["SuccessMessage"] = response.message;
            } else {
                TempData["ErrorMessage"] = response.message;
            }
        }
    }

    function submitcreateForm(formId) { // Definición de la función para enviar el formulario mediante AJAX
        var formData = $('#' + formId).serialize();  // Recopila los datos del formulario con el ID proporcionado
        $.ajax({ //Solicitud AJAX
            url: '/Proyecto/Create', // URL de la acción Create en el controlador Proyecto
            type: 'POST',  // Método de la solicitud
            data: formData, // Datos a enviar al servidor (datos del formulario serializados)
            success: function (response) {
                handleResponse(response);
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
                handleResponse(null, true); // Maneja el error general
            }
        });
    }

    function submiteditForm(formId) { // Definición de la función para enviar el formulario mediante AJAX
        var formData = $('#' + formId).serialize(); // Recopila los datos del formulario con el ID proporcionado
        $.ajax({ //Solicitud AJAX
            url: '/Proyecto/Edit', // URL de la acción Edit en el controlador Proyecto
            type: 'POST', // Método de la solicitud
            data: formData, // Datos a enviar al servidor (datos del formulario serializados)
            success: function (response) {
                handleResponse(response);
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
                handleResponse(null, true); // Maneja el error general
            }
        });
    }

    function cargarVistaCreate() { // Funcion para cargar la vista en un modal
        $.ajax({ //solicitud AJAX para obtener la vista create
            url: "/Proyecto/Create", // URL de la vista que se va a cargar
            type: "GET", // Solicitud para obtener la vista
            success: function (data) { // Función a ejecutar si la solicitud AJAX es exitosa
                $("#createModalContent").html(data); // Inserta el contenido HTML recibido en el elemento con ID "createModalContent"
                $("#createModal").modal("show"); // Muestra el modal con ID "createModal" después de cargar la vista
            }
        });
    }

    function cargarVistaEdit(id) { // Funcion para cargar la vista en un modal
        $.ajax({ //solicitud AJAX para obtener la vista edit
            url: "/Proyecto/Edit/" + id, // URL de la vista que se va a cargar
            type: "GET", // Solicitud para obtener la vista
            success: function (data) { // Función a ejecutar si la solicitud AJAX es exitosa
                $("#editModalContent").html(data); // Inserta el contenido HTML recibido en el elemento con ID "editModalContent"
                $("#editModal").modal("show"); // Muestra el modal con ID "editModal" después de cargar la vista
            }
        });
    }

    function mostrarTarjetaEliminar(proyectoId) {
        // Establecer el ID del proyecto en el campo oculto
        document.getElementById('deleteProjectId').value = proyectoId;
        // Mostrar la tarjeta de confirmación
        document.getElementById('confirmDeleteCard').classList.remove('hidden');
    }

    // Función para ocultar la tarjeta (ya está en el botón "Cancelar")
    function ocultarTarjetaEliminar() {
        document.getElementById('confirmDeleteCard').classList.add('hidden');
    }

    document.addEventListener("DOMContentLoaded", function () {
        const alertContainer = document.getElementById('alertContainer');
        if (alertContainer) {
            // Mostrar la alerta durante 5 segundos
            setTimeout(() => {
                // Desvanecer la alerta
                alertContainer.style.transition = 'opacity 0.5s ease';
                alertContainer.style.opacity = '0';
                // Esperar a que se desvanezca antes de eliminar
                setTimeout(() => alertContainer.remove(), 500);
            }, 4000); // Esperar 4 segundos
        }
    });
</script>
