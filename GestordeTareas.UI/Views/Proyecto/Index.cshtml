@model IEnumerable<GestordeTaras.EN.Proyecto>

@{
    ViewData["Title"] = "Index";
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.1/dist/sweetalert2.min.css" rel="stylesheet"> 

}
﻿<div id="alertContainer" class="fixed bottom-4 right-4 z-50">
    @if (TempData["SuccessMessage"] != null)
    {
        <div role="alert"
             class="bg-green-100 dark:bg-green-900 border-l-4 border-green-500 dark:border-green-700 text-green-900 dark:text-green-100 p-2 rounded-lg flex items-center transition duration-300 ease-in-out hover:bg-green-200 dark:hover:bg-green-800 transform hover:scale-105">
            <svg stroke="currentColor"
                 viewBox="0 0 24 24"
                 fill="none"
                 class="h-6 w-6 flex-shrink-0 mr-3 text-green-600"
                 xmlns="http://www.w3.org/2000/svg">
                <path d="M13 16h-1v-4h1m0-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                      stroke-width="2"
                      stroke-linejoin="round"
                      stroke-linecap="round"></path>
            </svg>
            <p class="text-sm font-semibold">@TempData["SuccessMessage"]</p>
        </div>
    }
</div>

@if (TempData["ErrorMessage"] != null)
{
    <script>
        Swal.fire({
            icon: 'error',
            title: '¡Error!',
            text: '@Html.Raw(TempData["ErrorMessage"])',
            confirmButtonText: 'OK'
        });
    </script>
}

<h1 class="text-5xl mb-8 mt-4 font-extrabold dark:text-white">Proyectos</h1>

@if (User.Identity.IsAuthenticated && User.IsInRole("Administrador"))
{
    <div class="d-flex justify-content-between align-items-center flex-wrap mb-4">
        <p>
            <a href="#" class="no-underline hover:no-underline text-white bg-purple-700 hover:bg-purple-800 focus:outline-none focus:ring-4 focus:ring-purple-300 font-medium rounded-full text-lg px-4 py-2 text-center dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900 inline-flex items-center" onclick="cargarVistaCreate()">
                <i class="fas fa-plus mr-2"></i> Nuevo
            </a>
        </p>

        <!-- Formulario de búsqueda -->
        <form method="get" asp-action="Index" class="flex items-center">
            <div class="flex items-center mr-4">
                <span class="mr-2">Buscar por:</span>
                <select name="filter" class="border border-gray-300 rounded-md p-2 w-32">
                    <option value="Titulo">Título</option>
                    <option value="Administrador">Administrador</option>
                </select>
            </div>
            <div class="flex items-center">
                <label for="query" class="sr-only">Ingrese el término de búsqueda:</label>
                <input type="text" name="query" class="border border-gray-300 rounded-md p-2" placeholder="Buscar..." aria-label="Ingrese el término de búsqueda" />
                <button type="submit" class="bg-purple-500 text-white font-semibold rounded-md p-2 ml-2 hover:bg-purple-600 transition duration-200">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </form>
    </div>
}


@if (Model != null && Model.Any())
{
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        @foreach (var item in Model)
        {
            <div class="relative rounded-lg border border-gray-300 p-6 bg-white dark:bg-gray-800 shadow-sm w-full mb-4">
                <!-- Botón principal flotante y menú desplegable -->
                <div class="absolute top-0 right-0 mt-1 mr-1">
                    @if (User.IsInRole("Administrador"))
                    {
                        <!-- Botón principal flotante -->
                        <button class="rounded-full bg-gray-200 w-10 h-10 flex items-center justify-center shadow-lg transition-all duration-300 transform hover:scale-110 hover:rotate-180 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500" id="menuButton-@item.Id" onclick="toggleMenu(@item.Id)">
                            <i class="fas fa-ellipsis-v text-gray-800 text-xl"></i>
                        </button>

                        <!-- Menú desplegable -->
                        <div id="menu-@item.Id" class="absolute right-0 mt-2 w-36 bg-white rounded-lg py-2 shadow-md hidden z-10 transition-all duration-300 ease-out transform">
                            <ul class="space-y-1 px-3">

                                <!-- Opción de Editar -->
                                <li class="flex items-center gap-3 text-gray-700 cursor-pointer p-2 rounded-lg transition-all duration-200 ease-in-out hover:bg-blue-500 hover:text-white active:scale-95"
                                    onclick="cargarVistaEdit(@item.Id)">
                                    <i class="fas fa-edit text-black-500"></i>
                                    <span class="font-medium">Editar</span>
                                </li>

                                <!-- Opción de Eliminar -->
                                <li class="flex items-center gap-3 text-gray-700 cursor-pointer p-2 rounded-lg transition-all duration-200 ease-in-out hover:bg-red-500 hover:text-white active:scale-95"
                                    onclick="cargarVistaDelete(@item.Id)">
                                    <i class="fas fa-trash-alt text-black-500"></i>
                                    <span class="font-medium">Eliminar</span>
                                </li>
                            </ul>
                        </div>

                    }
                </div>

                <!-- Título del proyecto -->
                <h2 class="text-xl font-bold text-gray-900 mb-4 text-center">@item.Titulo</h2>

                <!-- Administrador del proyecto -->
                <div class="flex items-center justify-center mb-4">
                    <img class="h-10 w-10 rounded-full border-2 border-gray-300 mr-3" src="@item.Usuario.FotoPerfil" alt="@item.Usuario.Nombre @item.Usuario.Apellido" />
                    <p class="text-sm text-gray-500">
                        <span class="font-semibold">Administrador:</span> @item.Usuario.Nombre @item.Usuario.Apellido
                    </p>
                </div>


                <!-- Descripción -->
                <p class="text-gray-700 dark:text-gray-400 mb-4 text-center">
                    @if (item.Descripcion.Length > 100)
                    {
                        <text>@item.Descripcion.Substring(0, 100)...</text>
                    }
                    else
                    {
                        <text>@item.Descripcion</text>
                    }
                </p>

                <!-- Fecha de Finalización -->
                <p class="text-sm text-gray-500 mb-4 text-center">
                    <span class="font-semibold text-gray-500 dark:text-gray-400">Fecha de finalización:</span> @item.FechaFinalizacion.ToShortDateString()
                </p>

                <!-- Contador de Usuarios -->
                <div class="flex items-center justify-center text-gray-500 mb-2">
                    <i class="fas fa-users mr-2"></i>
                    <span class="text-sm">@((item.ProyectoUsuario?.Count ?? 0)) usuarios unidos</span>
                </div>

                <!-- Imágenes de miembros -->
                <div class="flex justify-center mb-4 min-h-[32px]">
                    <div class="flex -space-x-2">
                        @if (item.ProyectoUsuario != null && item.ProyectoUsuario.Any())
                        {
                            @foreach (var proyectoUsuario in item.ProyectoUsuario.Take(3))
                            {
                                <img class="h-8 w-8 rounded-full border-2 border-white"
                                     src="@proyectoUsuario.Usuario.FotoPerfil"
                                     alt="@proyectoUsuario.Usuario.Nombre" />
                            }
                            @if (item.ProyectoUsuario.Count() > 3)
                            {
                                <div class="h-8 w-8 rounded-full bg-gray-200 flex items-center justify-center text-gray-600">
                                    <span class="text-xs font-medium">+@(item.ProyectoUsuario.Count() - 3)</span>
                                </div>
                            }
                        }
                        else
                        {
                            <!-- Espacio reservado cuando no hay usuarios -->
                            <img class="h-8 w-8 opacity-0" src="" alt="placeholder" />
                        }
                    </div>
                </div>


                <!-- Botones de acción -->
                <div class="flex justify-between mt-4">
                    <!-- Botón de Unirse -->
                    @if (User.IsInRole("Administrador"))
                    {
                        <a href="@Url.Action("Details", "Proyecto", new { id = item.Id })"
                           class="flex items-center justify-center px-4 py-2 border border-gray-400 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-700 text-sm font-medium no-underline transition-all duration-200 ease-out">
                            <i class="fa-solid fa-sliders mr-4"></i> Detalles
                        </a>

                    }
                    else if (User.IsInRole("Colaborador"))
                    {
                        <a href="@Url.Action("Details", "Proyecto", new { id = item.Id })"
                           class="flex items-center justify-center px-4 py-2 border border-green-400 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-green-300 dark:hover:bg-green-700 text-sm font-medium no-underline transition-all duration-200 ease-out">
                            <i class="fas fa-user-plus mr-4"></i> Unirse
                        </a>

                    }
                    <!-- Botón de Ingresar con AJAX -->
                    @* <a href="javascript:void(0);"
                       data-proyecto-id="@item.Id"
                       class="flex items-center justify-center px-4 py-2 bg-purple-800 text-white rounded-lg hover:bg-purple-600 text-sm font-medium no-underline transition-all duration-200 ease-out ingresar-tarea">
                        <i class="fas fa-sign-in-alt mr-4"></i> Ingresar
                    </a> *@
                    <!-- Botón de Ingresar -->
                    <a href="@Url.Action("Index", "Tarea", new { proyectoId = item.Id })"
                       class="flex items-center justify-center px-4 py-2 bg-purple-800 text-white rounded-lg hover:bg-purple-600 text-sm font-medium no-underline transition-all duration-200 ease-out">
                        <i class="fas fa-sign-in-alt mr-4"></i> Ingresar
                    </a>

                </div>

            </div>
        }
    </div>

}
else
{
    <div class="flex flex-col items-center justify-center mt-10">
        <img src="~/img/found.svg" alt="No hay proyectos disponibles" class="w-36 h-36 mb-4" />
        <h1 class="text-2xl font-bold text-gray-700">No hay proyectos disponibles</h1>
        <p class="mt-2 text-gray-500">Crea un nuevo proyecto para comenzar a trabajar.</p>
    </div>
}



<!-- Modal de creacion -->
<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-purple-700 text-white">
                <h5 class="modal-title" id="createModalLabel">Crear Proyecto</h5>
                <button type="button" class="btn-close bg-white text-white" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <div id="createModalContent">
                    <!-- Contenido de la vista de creación se cargará aquí -->
                </div>
            </div>
            <div class="modal-footer flex justify-center">
                <button type="button" class="btn btn-primary bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-2 focus:ring-purple-500 focus:outline-none focus:ring-opacity-50 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2" onclick="submitcreateForm('createForm')">
                    <i class="fas fa-save"></i> Guardar
                </button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de edición -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-purple-700 text-white">
                <h5 class="modal-title" id="editModalLabel">Editar Proyecto</h5>
                <button type="button" class="btn-close bg-white text-white" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <div id="editModalContent">
                    <!-- Contenido de la vista de edición se cargará aquí -->
                </div>
            </div>
            <div class="modal-footer flex justify-center">
                <button type="button" class="btn btn-primary bg-gradient-to-r from-purple-500 via-purple-600 to-purple-700 hover:bg-gradient-to-br focus:ring-2 focus:ring-purple-500 focus:outline-none focus:ring-opacity-50 dark:focus:ring-purple-800 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2" onclick="submiteditForm('editForm')">
                    <i class="fas fa-save"></i> Guardar
                </button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de eliminación -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-red-600 text-white">
                <h5 class="modal-title" id="deleteModalLabel">Eliminar Proyecto</h5>
                <button type="button" class="btn-close bg-white text-white" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body" id="deleteModalContent">
                <!-- Contenido de la vista de eliminación se cargará aquí -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" onclick="eliminarProyecto()">Eliminar</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>


<!-- Bootstrap JavaScript -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.1/dist/sweetalert2.all.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>


<script>

    function toggleMenu(id) {
        var menu = document.getElementById('menu-' + id);
        if (menu.classList.contains('hidden')) {
            menu.classList.remove('hidden');
        } else {
            menu.classList.add('hidden');
        }
    }

    // Cierra el menú si se hace clic fuera de él
    window.addEventListener('click', function (e) {
        // Obtén todos los menús desplegables
        var allMenus = document.querySelectorAll('[id^="menu-"]');

        // Verifica si el clic no ocurrió dentro del botón o del menú
        allMenus.forEach(function (menu) {
            if (!menu.contains(e.target) && !document.getElementById('menuButton-' + menu.id.split('-')[1]).contains(e.target)) {
                menu.classList.add('hidden');
            }
        });
    });

    function handleResponse(response, isError = false) {
        // Cerrar el modal y luego mostrar el mensaje
        $('#editModal, #createModal').modal('hide'); // Asegúrate de incluir todos los IDs de los modales

        if (isError) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Hubo un problema al procesar la solicitud.',
                confirmButtonText: 'OK',
                showConfirmButton: true,
                timer: null
            });
        } else {
            if (response.success) {
                window.location.reload();
                TempData["SuccessMessage"] = response.message;
            } else {
                TempData["ErrorMessage"] = response.message;
            }
        }
    }

    function submitcreateForm(formId) { // Definición de la función para enviar el formulario mediante AJAX
        var formData = $('#' + formId).serialize();  // Recopila los datos del formulario con el ID proporcionado
        $.ajax({ //Solicitud AJAX
            url: '/Proyecto/Create', // URL de la acción Create en el controlador Proyecto
            type: 'POST',  // Método de la solicitud
            data: formData, // Datos a enviar al servidor (datos del formulario serializados)
            success: function (response) {
                handleResponse(response);
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
                handleResponse(null, true); // Maneja el error general
            }
        });
    }

    function submiteditForm(formId) { // Definición de la función para enviar el formulario mediante AJAX
        var formData = $('#' + formId).serialize(); // Recopila los datos del formulario con el ID proporcionado
        $.ajax({ //Solicitud AJAX
            url: '/Proyecto/Edit', // URL de la acción Edit en el controlador Proyecto
            type: 'POST', // Método de la solicitud
            data: formData, // Datos a enviar al servidor (datos del formulario serializados)
            success: function (response) {
                handleResponse(response);
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
                handleResponse(null, true); // Maneja el error general
            }
        });
    }

    function eliminarProyecto() { // Función para eliminar un proyecto mediante una solicitud AJAX
        $.ajax({ // Enviar una solicitud AJAX para eliminar el proyecto
            url: '/Proyecto/Delete', // URL de la acción POST para eliminar el proyecto
            type: 'POST', // Método POST para enviar la solicitud
            data: $("#deleteForm").serialize(), // Serializar los datos del formulario (que incluye el ID del Proyecto)
            success: function (response) { // Función a ejecutar si la solicitud AJAX es exitosa
                window.location.reload(); // Recargar la página después de eliminar el Proyecto
            },
            error: function (xhr, status, error) { // Función a ejecutar si hay un error en la solicitud AJAX
                alert('Error al eliminar el proyecto: ' + xhr.responseText); // Mostrar una alerta con el mensaje de error recibido del servidor
            }
        });
    }

    function cargarVistaCreate() { // Funcion para cargar la vista en un modal
        $.ajax({ //solicitud AJAX para obtener la vista create
            url: "/Proyecto/Create", // URL de la vista que se va a cargar
            type: "GET", // Solicitud para obtener la vista
            success: function (data) { // Función a ejecutar si la solicitud AJAX es exitosa
                $("#createModalContent").html(data); // Inserta el contenido HTML recibido en el elemento con ID "createModalContent"
                $("#createModal").modal("show"); // Muestra el modal con ID "createModal" después de cargar la vista
            }
        });
    }

    function cargarVistaEdit(id) { // Funcion para cargar la vista en un modal
        $.ajax({ //solicitud AJAX para obtener la vista edit
            url: "/Proyecto/Edit/" + id, // URL de la vista que se va a cargar
            type: "GET", // Solicitud para obtener la vista
            success: function (data) { // Función a ejecutar si la solicitud AJAX es exitosa
                $("#editModalContent").html(data); // Inserta el contenido HTML recibido en el elemento con ID "editModalContent"
                $("#editModal").modal("show"); // Muestra el modal con ID "editModal" después de cargar la vista
            }
        });
    }

    function cargarVistaDelete(id) { // Funcion para cargar la vista en un modal
        $.ajax({ //solicitud AJAX para obtener la vista delete
            url: "/Proyecto/Delete/" + id, // URL de la vista que se va a cargar
            type: "GET", // Solicitud para obtener la vista
            success: function (data) { // Función a ejecutar si la solicitud AJAX es exitosa
                $("#deleteModalContent").html(data); // Inserta el contenido HTML recibido en el elemento con ID "deleteModalContent"
                $("#deleteModal").modal("show"); // Muestra el modal con ID "deleteModal" después de cargar la vista
            },
            error: function () { // Función a ejecutar si la solicitud AJAX falla
                alert("Error al cargar la vista de eliminación."); //Se muestra un mensaje de error que no se pudo mostrar el modal
            }
        });
    }

    document.addEventListener("DOMContentLoaded", function () {
        const alertContainer = document.getElementById('alertContainer');
        if (alertContainer) {
            // Mostrar la alerta durante 5 segundos
            setTimeout(() => {
                // Desvanecer la alerta
                alertContainer.style.transition = 'opacity 0.5s ease';
                alertContainer.style.opacity = '0';
                // Esperar a que se desvanezca antes de eliminar
                setTimeout(() => alertContainer.remove(), 500);
            }, 4000); // Esperar 4 segundos
        }
    });

    @* $(document).on('click', '.ingresar-tarea', function () {
        var proyectoId = $(this).data('proyecto-id');
        $.ajax({
            url: '@Url.Action("Index", "Tarea")',  // Llamar a la acción en el controlador
            data: { proyectoId: proyectoId },
            type: 'GET',
            success: function (response) {
                if (response.success) {
                    window.location.href = '@Url.Action("Index", "Tarea")?proyectoId=' + proyectoId;
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: '¡Error!',
                        text: response.message,
                        confirmButtonText: 'OK'
                    });
                }
            }
        });
    }); *@



</script>
